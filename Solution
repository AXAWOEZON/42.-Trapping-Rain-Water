class Solution {
public:
    int trap(vector<int>& height) {
        ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

        int n = height.size();
        if (n <= 2) {
            return 0;
        }

        int rightPointer = n - 1, rightMax = 0;
        int leftPointer = 0, leftMax = 0;
        int currentHeight = 0;

        while (leftPointer < rightPointer) {
            if (height[leftPointer] <= height[rightPointer]) {
                if (height[leftPointer] >= leftMax) {
                    leftMax = height[leftPointer];
                }
                else {
                    currentHeight += leftMax - height[leftPointer];
                }
                leftPointer++;
            }
            else {
                if (height[rightPointer] >= rightMax) {
                    rightMax = height[rightPointer];
                }
                else {
                    currentHeight += rightMax - height[rightPointer];
                }
                rightPointer--;
            }
        }
        return currentHeight;
    }
};
